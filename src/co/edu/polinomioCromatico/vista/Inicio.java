/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package co.edu.polinomioCromatico.vista;

import co.edu.polinomioCromatico.controlador.controlador;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Mario
 */
public class Inicio extends javax.swing.JFrame {

    private controlador controlador;
    /**
     * Creates new form Inicio2
     */
    public Inicio() {
        initComponents();
        setLocationRelativeTo(null);
        controlador = new controlador();
        botonCalcularPolinomio.setEnabled(false);
        botonEvaluarPolinomio.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelCargarDocumento = new javax.swing.JPanel();
        botonCargarArchivo = new javax.swing.JButton();
        panelEleccionGrafo = new javax.swing.JPanel();
        listaGrafos = new javax.swing.JComboBox<>();
        botonCalcularPolinomio = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        areaTextoPolinomio = new javax.swing.JTextArea();
        botonEvaluarPolinomio = new javax.swing.JButton();
        campo2 = new javax.swing.JTextField();
        funcionalidades = new javax.swing.JPanel();
        ingresar = new javax.swing.JButton();
        suma = new javax.swing.JButton();
        multiplicacion = new javax.swing.JButton();
        esFactor = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelCargarDocumento.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cargado de archivos", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        botonCargarArchivo.setText("Cargar documento");
        botonCargarArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCargarArchivoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelCargarDocumentoLayout = new javax.swing.GroupLayout(panelCargarDocumento);
        panelCargarDocumento.setLayout(panelCargarDocumentoLayout);
        panelCargarDocumentoLayout.setHorizontalGroup(
            panelCargarDocumentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCargarDocumentoLayout.createSequentialGroup()
                .addGap(215, 215, 215)
                .addComponent(botonCargarArchivo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelCargarDocumentoLayout.setVerticalGroup(
            panelCargarDocumentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCargarDocumentoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botonCargarArchivo)
                .addGap(59, 59, 59))
        );

        panelEleccionGrafo.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Elegir Grafo", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        listaGrafos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Grafos-" }));

        botonCalcularPolinomio.setText("Calcular Polinomio");
        botonCalcularPolinomio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCalcularPolinomioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelEleccionGrafoLayout = new javax.swing.GroupLayout(panelEleccionGrafo);
        panelEleccionGrafo.setLayout(panelEleccionGrafoLayout);
        panelEleccionGrafoLayout.setHorizontalGroup(
            panelEleccionGrafoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEleccionGrafoLayout.createSequentialGroup()
                .addContainerGap(155, Short.MAX_VALUE)
                .addComponent(listaGrafos, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65)
                .addComponent(botonCalcularPolinomio)
                .addGap(125, 125, 125))
        );
        panelEleccionGrafoLayout.setVerticalGroup(
            panelEleccionGrafoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelEleccionGrafoLayout.createSequentialGroup()
                .addContainerGap(38, Short.MAX_VALUE)
                .addGroup(panelEleccionGrafoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(botonCalcularPolinomio)
                    .addComponent(listaGrafos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37))
        );

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Polinomio Cromatico", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        areaTextoPolinomio.setColumns(20);
        areaTextoPolinomio.setRows(5);
        jScrollPane1.setViewportView(areaTextoPolinomio);

        botonEvaluarPolinomio.setText("Evaluar Polinomio");
        botonEvaluarPolinomio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEvaluarPolinomioActionPerformed(evt);
            }
        });

        campo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campo2ActionPerformed(evt);
            }
        });

        funcionalidades.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        ingresar.setText("Ingresar");
        ingresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingresarActionPerformed(evt);
            }
        });

        suma.setText("Suma");

        multiplicacion.setText("Multiplicaci√≥n");

        esFactor.setText("Es factor");
        esFactor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                esFactorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout funcionalidadesLayout = new javax.swing.GroupLayout(funcionalidades);
        funcionalidades.setLayout(funcionalidadesLayout);
        funcionalidadesLayout.setHorizontalGroup(
            funcionalidadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(funcionalidadesLayout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(ingresar)
                .addGap(18, 18, 18)
                .addComponent(suma)
                .addGap(18, 18, 18)
                .addComponent(multiplicacion)
                .addGap(18, 18, 18)
                .addComponent(esFactor)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        funcionalidadesLayout.setVerticalGroup(
            funcionalidadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(funcionalidadesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(funcionalidadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ingresar)
                    .addComponent(suma)
                    .addComponent(multiplicacion)
                    .addComponent(esFactor))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(campo2, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(76, 76, 76)
                        .addComponent(botonEvaluarPolinomio)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(funcionalidades, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(panelCargarDocumento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(panelEleccionGrafo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelCargarDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelEleccionGrafo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonEvaluarPolinomio))
                .addGap(51, 51, 51)
                .addComponent(funcionalidades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        funcionalidades.getAccessibleContext().setAccessibleName("Funcionalidades");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonCargarArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCargarArchivoActionPerformed
        if(listaGrafos.getItemCount()>1)
        {
            int opcion = JOptionPane.showConfirmDialog(null,"Ya se ha cargado un archivo anteriormente, ¬øSeguro desea cargar uno diferente?", 
                                "Polinomio Crom√°tico 1.0", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if(opcion == JOptionPane.YES_OPTION)
            {
                controlador.reiniciarGrafos();
                botonCalcularPolinomio.setEnabled(false);
                botonEvaluarPolinomio.setEnabled(false);
                listaGrafos.removeAllItems();
                listaGrafos.addItem("-Grafos-");
                cargarArchivo();
                botonCalcularPolinomio.setEnabled(true);
            }            
        }
        else
        {
            cargarArchivo();
            botonCalcularPolinomio.setEnabled(true);            
        }
        
    }//GEN-LAST:event_botonCargarArchivoActionPerformed

    private void botonCalcularPolinomioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCalcularPolinomioActionPerformed
        if(listaGrafos.getSelectedIndex()==0)
        {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un grafo");
        }
        else
        {
            String polinomio = controlador.calcularPolinomio(listaGrafos.getSelectedIndex());
            areaTextoPolinomio.setText(polinomio);
        }
    }//GEN-LAST:event_botonCalcularPolinomioActionPerformed

    private void ingresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingresarActionPerformed
//        // TODO add your handling code here:
//        controlador.crearPolinomio2(campo2.getText());
//        
//        
//        labelPolinomio1.setText(controlador.imprimePolinomio(0));
//        campo2.setText("");   
    }//GEN-LAST:event_ingresarActionPerformed

    private void campo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campo2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campo2ActionPerformed

    private void botonEvaluarPolinomioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEvaluarPolinomioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_botonEvaluarPolinomioActionPerformed

    private void esFactorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_esFactorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_esFactorActionPerformed

    private void cargarArchivo()
    {
        JFileChooser archivo =new JFileChooser();
            archivo.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);        
            int result = archivo.showSaveDialog(this);
            if (result == JFileChooser.APPROVE_OPTION) 
            {
                File archivoLeido = archivo.getSelectedFile();
                String nombreArchivo = archivoLeido.getAbsolutePath();
                controlador.leerArchivo(nombreArchivo);
                for(int i=0; i<controlador.obtenerLongitudArray(); i++)
                {
                    listaGrafos.addItem(controlador.obtenerGrafoEnPosicion(i));
                }
            }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inicio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaTextoPolinomio;
    private javax.swing.JButton botonCalcularPolinomio;
    private javax.swing.JButton botonCargarArchivo;
    private javax.swing.JButton botonEvaluarPolinomio;
    private javax.swing.JTextField campo2;
    private javax.swing.JButton esFactor;
    private javax.swing.JPanel funcionalidades;
    private javax.swing.JButton ingresar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> listaGrafos;
    private javax.swing.JButton multiplicacion;
    private javax.swing.JPanel panelCargarDocumento;
    private javax.swing.JPanel panelEleccionGrafo;
    private javax.swing.JButton suma;
    // End of variables declaration//GEN-END:variables
}
